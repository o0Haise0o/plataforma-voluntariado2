# Generated by Django 5.2.6 on 2025-09-23 00:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Causa',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=150, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=170, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Habilidad',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=120, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=140, unique=True)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Organizacion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200, unique=True)),
                ('correo', models.EmailField(blank=True, max_length=254)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('sitio_web', models.URLField(blank=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Ubicacion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=150)),
                ('direccion', models.CharField(blank=True, max_length=250)),
                ('ciudad', models.CharField(blank=True, max_length=120)),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['ciudad', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rol', models.CharField(choices=[('VOL', 'Voluntario'), ('ORG', 'Organizador/Coordinador'), ('STA', 'Staff')], default='VOL', max_length=3)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('ciudad', models.CharField(blank=True, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('habilidades', models.ManyToManyField(blank=True, related_name='usuarios', to='acciones.habilidad')),
            ],
            options={
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Campana',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=230, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('fecha_inicio', models.DateField()),
                ('fecha_termino', models.DateField()),
                ('creada_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campanas_creadas', to=settings.AUTH_USER_MODEL)),
                ('causas', models.ManyToManyField(blank=True, related_name='campanas', to='acciones.causa')),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campanas', to='acciones.organizacion')),
            ],
            options={
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('inicio', models.DateTimeField()),
                ('termino', models.DateTimeField()),
                ('cupos', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)])),
                ('estado', models.CharField(choices=[('PLN', 'Planificada'), ('OPN', 'Inscripciones abiertas'), ('FUL', 'Cupos llenos'), ('DON', 'Finalizada'), ('CAN', 'Cancelada')], default='PLN', max_length=3)),
                ('campana', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actividades', to='acciones.campana')),
                ('ubicacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actividades', to='acciones.ubicacion')),
            ],
            options={
                'ordering': ['inicio'],
            },
        ),
        migrations.CreateModel(
            name='Participacion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('estado', models.CharField(choices=[('PEN', 'Pendiente'), ('APR', 'Aprobada'), ('REJ', 'Rechazada'), ('CAN', 'Cancelada'), ('ATT', 'Asistió'), ('NOS', 'No se presentó')], default='PEN', max_length=3)),
                ('postulada_en', models.DateTimeField(default=django.utils.timezone.now)),
                ('aprobada_en', models.DateTimeField(blank=True, null=True)),
                ('check_in', models.DateTimeField(blank=True, null=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('horas', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('actividad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participaciones', to='acciones.actividad')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-postulada_en'],
            },
        ),
        migrations.AddIndex(
            model_name='campana',
            index=models.Index(fields=['fecha_inicio', 'fecha_termino'], name='acciones_ca_fecha_i_6622bd_idx'),
        ),
        migrations.AddConstraint(
            model_name='campana',
            constraint=models.CheckConstraint(condition=models.Q(('fecha_termino__gte', models.F('fecha_inicio'))), name='campana_fechas_validas'),
        ),
        migrations.AddIndex(
            model_name='participacion',
            index=models.Index(fields=['estado'], name='acciones_pa_estado_514ed6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='participacion',
            unique_together={('usuario', 'actividad')},
        ),
        migrations.AddIndex(
            model_name='actividad',
            index=models.Index(fields=['inicio'], name='acciones_ac_inicio_8d7436_idx'),
        ),
        migrations.AddIndex(
            model_name='actividad',
            index=models.Index(fields=['estado'], name='acciones_ac_estado_8dc631_idx'),
        ),
        migrations.AddConstraint(
            model_name='actividad',
            constraint=models.CheckConstraint(condition=models.Q(('termino__gt', models.F('inicio'))), name='actividad_tiempo_valido'),
        ),
    ]
